// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: paxos.proto

#ifndef PROTOBUF_paxos_2eproto__INCLUDED
#define PROTOBUF_paxos_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace alisql {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_paxos_2eproto();
void protobuf_AssignDesc_paxos_2eproto();
void protobuf_ShutdownFile_paxos_2eproto();

class ClusterInfoEntry;
class CompressedLogEntries;
class ConfigureChangeValue;
class LogEntry;
class PaxosMsg;
class PolarExtra;
class TestMsg1;
class TestMsg2;

// ===================================================================

class LogEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:alisql.LogEntry) */ {
 public:
  LogEntry();
  virtual ~LogEntry();

  LogEntry(const LogEntry& from);

  inline LogEntry& operator=(const LogEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogEntry& default_instance();

  void Swap(LogEntry* other);

  // implements Message ----------------------------------------------

  inline LogEntry* New() const { return New(NULL); }

  LogEntry* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogEntry& from);
  void MergeFrom(const LogEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LogEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 term = 1;
  bool has_term() const;
  void clear_term();
  static const int kTermFieldNumber = 1;
  ::google::protobuf::uint64 term() const;
  void set_term(::google::protobuf::uint64 value);

  // required uint64 index = 2;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::uint64 index() const;
  void set_index(::google::protobuf::uint64 value);

  // required uint64 opType = 3;
  bool has_optype() const;
  void clear_optype();
  static const int kOpTypeFieldNumber = 3;
  ::google::protobuf::uint64 optype() const;
  void set_optype(::google::protobuf::uint64 value);

  // optional bytes ikey = 4;
  bool has_ikey() const;
  void clear_ikey();
  static const int kIkeyFieldNumber = 4;
  const ::std::string& ikey() const;
  void set_ikey(const ::std::string& value);
  void set_ikey(const char* value);
  void set_ikey(const void* value, size_t size);
  ::std::string* mutable_ikey();
  ::std::string* release_ikey();
  void set_allocated_ikey(::std::string* ikey);

  // optional bytes value = 5;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 5;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional uint64 info = 6;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 6;
  ::google::protobuf::uint64 info() const;
  void set_info(::google::protobuf::uint64 value);

  // optional uint64 checksum = 7;
  bool has_checksum() const;
  void clear_checksum();
  static const int kChecksumFieldNumber = 7;
  ::google::protobuf::uint64 checksum() const;
  void set_checksum(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:alisql.LogEntry)
 private:
  inline void set_has_term();
  inline void clear_has_term();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_optype();
  inline void clear_has_optype();
  inline void set_has_ikey();
  inline void clear_has_ikey();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_checksum();
  inline void clear_has_checksum();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 term_;
  ::google::protobuf::uint64 index_;
  ::google::protobuf::uint64 optype_;
  ::google::protobuf::internal::ArenaStringPtr ikey_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint64 info_;
  ::google::protobuf::uint64 checksum_;
  friend void  protobuf_AddDesc_paxos_2eproto();
  friend void protobuf_AssignDesc_paxos_2eproto();
  friend void protobuf_ShutdownFile_paxos_2eproto();

  void InitAsDefaultInstance();
  static LogEntry* default_instance_;
};
// -------------------------------------------------------------------

class CompressedLogEntries : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:alisql.CompressedLogEntries) */ {
 public:
  CompressedLogEntries();
  virtual ~CompressedLogEntries();

  CompressedLogEntries(const CompressedLogEntries& from);

  inline CompressedLogEntries& operator=(const CompressedLogEntries& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CompressedLogEntries& default_instance();

  void Swap(CompressedLogEntries* other);

  // implements Message ----------------------------------------------

  inline CompressedLogEntries* New() const { return New(NULL); }

  CompressedLogEntries* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CompressedLogEntries& from);
  void MergeFrom(const CompressedLogEntries& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CompressedLogEntries* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // required uint32 rawSize = 2;
  bool has_rawsize() const;
  void clear_rawsize();
  static const int kRawSizeFieldNumber = 2;
  ::google::protobuf::uint32 rawsize() const;
  void set_rawsize(::google::protobuf::uint32 value);

  // required bytes data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional uint32 checksum = 4;
  bool has_checksum() const;
  void clear_checksum();
  static const int kChecksumFieldNumber = 4;
  ::google::protobuf::uint32 checksum() const;
  void set_checksum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:alisql.CompressedLogEntries)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_rawsize();
  inline void clear_has_rawsize();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_checksum();
  inline void clear_has_checksum();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 rawsize_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint32 checksum_;
  friend void  protobuf_AddDesc_paxos_2eproto();
  friend void protobuf_AssignDesc_paxos_2eproto();
  friend void protobuf_ShutdownFile_paxos_2eproto();

  void InitAsDefaultInstance();
  static CompressedLogEntries* default_instance_;
};
// -------------------------------------------------------------------

class ConfigureChangeValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:alisql.ConfigureChangeValue) */ {
 public:
  ConfigureChangeValue();
  virtual ~ConfigureChangeValue();

  ConfigureChangeValue(const ConfigureChangeValue& from);

  inline ConfigureChangeValue& operator=(const ConfigureChangeValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigureChangeValue& default_instance();

  void Swap(ConfigureChangeValue* other);

  // implements Message ----------------------------------------------

  inline ConfigureChangeValue* New() const { return New(NULL); }

  ConfigureChangeValue* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConfigureChangeValue& from);
  void MergeFrom(const ConfigureChangeValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConfigureChangeValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ccType = 1;
  bool has_cctype() const;
  void clear_cctype();
  static const int kCcTypeFieldNumber = 1;
  ::google::protobuf::int32 cctype() const;
  void set_cctype(::google::protobuf::int32 value);

  // optional int32 opType = 2;
  bool has_optype() const;
  void clear_optype();
  static const int kOpTypeFieldNumber = 2;
  ::google::protobuf::int32 optype() const;
  void set_optype(::google::protobuf::int32 value);

  // repeated bytes addrs = 3;
  int addrs_size() const;
  void clear_addrs();
  static const int kAddrsFieldNumber = 3;
  const ::std::string& addrs(int index) const;
  ::std::string* mutable_addrs(int index);
  void set_addrs(int index, const ::std::string& value);
  void set_addrs(int index, const char* value);
  void set_addrs(int index, const void* value, size_t size);
  ::std::string* add_addrs();
  void add_addrs(const ::std::string& value);
  void add_addrs(const char* value);
  void add_addrs(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& addrs() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_addrs();

  // repeated bytes allServers = 4;
  int allservers_size() const;
  void clear_allservers();
  static const int kAllServersFieldNumber = 4;
  const ::std::string& allservers(int index) const;
  ::std::string* mutable_allservers(int index);
  void set_allservers(int index, const ::std::string& value);
  void set_allservers(int index, const char* value);
  void set_allservers(int index, const void* value, size_t size);
  ::std::string* add_allservers();
  void add_allservers(const ::std::string& value);
  void add_allservers(const char* value);
  void add_allservers(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& allservers() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_allservers();

  // repeated bytes allLearners = 5;
  int alllearners_size() const;
  void clear_alllearners();
  static const int kAllLearnersFieldNumber = 5;
  const ::std::string& alllearners(int index) const;
  ::std::string* mutable_alllearners(int index);
  void set_alllearners(int index, const ::std::string& value);
  void set_alllearners(int index, const char* value);
  void set_alllearners(int index, const void* value, size_t size);
  ::std::string* add_alllearners();
  void add_alllearners(const ::std::string& value);
  void add_alllearners(const char* value);
  void add_alllearners(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& alllearners() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_alllearners();

  // optional uint64 serverId = 6;
  bool has_serverid() const;
  void clear_serverid();
  static const int kServerIdFieldNumber = 6;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // optional uint32 forceSync = 7;
  bool has_forcesync() const;
  void clear_forcesync();
  static const int kForceSyncFieldNumber = 7;
  ::google::protobuf::uint32 forcesync() const;
  void set_forcesync(::google::protobuf::uint32 value);

  // optional uint32 electionWeight = 8;
  bool has_electionweight() const;
  void clear_electionweight();
  static const int kElectionWeightFieldNumber = 8;
  ::google::protobuf::uint32 electionweight() const;
  void set_electionweight(::google::protobuf::uint32 value);

  // optional uint64 learnerSource = 9;
  bool has_learnersource() const;
  void clear_learnersource();
  static const int kLearnerSourceFieldNumber = 9;
  ::google::protobuf::uint64 learnersource() const;
  void set_learnersource(::google::protobuf::uint64 value);

  // optional bool applyMode = 10;
  bool has_applymode() const;
  void clear_applymode();
  static const int kApplyModeFieldNumber = 10;
  bool applymode() const;
  void set_applymode(bool value);

  // @@protoc_insertion_point(class_scope:alisql.ConfigureChangeValue)
 private:
  inline void set_has_cctype();
  inline void clear_has_cctype();
  inline void set_has_optype();
  inline void clear_has_optype();
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_forcesync();
  inline void clear_has_forcesync();
  inline void set_has_electionweight();
  inline void clear_has_electionweight();
  inline void set_has_learnersource();
  inline void clear_has_learnersource();
  inline void set_has_applymode();
  inline void clear_has_applymode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 cctype_;
  ::google::protobuf::int32 optype_;
  ::google::protobuf::RepeatedPtrField< ::std::string> addrs_;
  ::google::protobuf::RepeatedPtrField< ::std::string> allservers_;
  ::google::protobuf::RepeatedPtrField< ::std::string> alllearners_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint32 forcesync_;
  ::google::protobuf::uint32 electionweight_;
  ::google::protobuf::uint64 learnersource_;
  bool applymode_;
  friend void  protobuf_AddDesc_paxos_2eproto();
  friend void protobuf_AssignDesc_paxos_2eproto();
  friend void protobuf_ShutdownFile_paxos_2eproto();

  void InitAsDefaultInstance();
  static ConfigureChangeValue* default_instance_;
};
// -------------------------------------------------------------------

class ClusterInfoEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:alisql.ClusterInfoEntry) */ {
 public:
  ClusterInfoEntry();
  virtual ~ClusterInfoEntry();

  ClusterInfoEntry(const ClusterInfoEntry& from);

  inline ClusterInfoEntry& operator=(const ClusterInfoEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterInfoEntry& default_instance();

  void Swap(ClusterInfoEntry* other);

  // implements Message ----------------------------------------------

  inline ClusterInfoEntry* New() const { return New(NULL); }

  ClusterInfoEntry* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClusterInfoEntry& from);
  void MergeFrom(const ClusterInfoEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClusterInfoEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 serverId = 1;
  bool has_serverid() const;
  void clear_serverid();
  static const int kServerIdFieldNumber = 1;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // optional uint64 matchIndex = 2;
  bool has_matchindex() const;
  void clear_matchindex();
  static const int kMatchIndexFieldNumber = 2;
  ::google::protobuf::uint64 matchindex() const;
  void set_matchindex(::google::protobuf::uint64 value);

  // optional uint64 nextIndex = 3;
  bool has_nextindex() const;
  void clear_nextindex();
  static const int kNextIndexFieldNumber = 3;
  ::google::protobuf::uint64 nextindex() const;
  void set_nextindex(::google::protobuf::uint64 value);

  // optional uint32 role = 4;
  bool has_role() const;
  void clear_role();
  static const int kRoleFieldNumber = 4;
  ::google::protobuf::uint32 role() const;
  void set_role(::google::protobuf::uint32 value);

  // optional uint64 hasVoted = 5;
  bool has_hasvoted() const;
  void clear_hasvoted();
  static const int kHasVotedFieldNumber = 5;
  ::google::protobuf::uint64 hasvoted() const;
  void set_hasvoted(::google::protobuf::uint64 value);

  // optional uint32 forceSync = 6;
  bool has_forcesync() const;
  void clear_forcesync();
  static const int kForceSyncFieldNumber = 6;
  ::google::protobuf::uint32 forcesync() const;
  void set_forcesync(::google::protobuf::uint32 value);

  // optional uint32 electionWeight = 7;
  bool has_electionweight() const;
  void clear_electionweight();
  static const int kElectionWeightFieldNumber = 7;
  ::google::protobuf::uint32 electionweight() const;
  void set_electionweight(::google::protobuf::uint32 value);

  // optional uint64 learnerSource = 8;
  bool has_learnersource() const;
  void clear_learnersource();
  static const int kLearnerSourceFieldNumber = 8;
  ::google::protobuf::uint64 learnersource() const;
  void set_learnersource(::google::protobuf::uint64 value);

  // optional uint64 appliedIndex = 9;
  bool has_appliedindex() const;
  void clear_appliedindex();
  static const int kAppliedIndexFieldNumber = 9;
  ::google::protobuf::uint64 appliedindex() const;
  void set_appliedindex(::google::protobuf::uint64 value);

  // optional uint32 pipelining = 10;
  bool has_pipelining() const;
  void clear_pipelining();
  static const int kPipeliningFieldNumber = 10;
  ::google::protobuf::uint32 pipelining() const;
  void set_pipelining(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:alisql.ClusterInfoEntry)
 private:
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_matchindex();
  inline void clear_has_matchindex();
  inline void set_has_nextindex();
  inline void clear_has_nextindex();
  inline void set_has_role();
  inline void clear_has_role();
  inline void set_has_hasvoted();
  inline void clear_has_hasvoted();
  inline void set_has_forcesync();
  inline void clear_has_forcesync();
  inline void set_has_electionweight();
  inline void clear_has_electionweight();
  inline void set_has_learnersource();
  inline void clear_has_learnersource();
  inline void set_has_appliedindex();
  inline void clear_has_appliedindex();
  inline void set_has_pipelining();
  inline void clear_has_pipelining();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint64 matchindex_;
  ::google::protobuf::uint64 nextindex_;
  ::google::protobuf::uint64 hasvoted_;
  ::google::protobuf::uint32 role_;
  ::google::protobuf::uint32 forcesync_;
  ::google::protobuf::uint64 learnersource_;
  ::google::protobuf::uint32 electionweight_;
  ::google::protobuf::uint32 pipelining_;
  ::google::protobuf::uint64 appliedindex_;
  friend void  protobuf_AddDesc_paxos_2eproto();
  friend void protobuf_AssignDesc_paxos_2eproto();
  friend void protobuf_ShutdownFile_paxos_2eproto();

  void InitAsDefaultInstance();
  static ClusterInfoEntry* default_instance_;
};
// -------------------------------------------------------------------

class PolarExtra : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:alisql.PolarExtra) */ {
 public:
  PolarExtra();
  virtual ~PolarExtra();

  PolarExtra(const PolarExtra& from);

  inline PolarExtra& operator=(const PolarExtra& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PolarExtra& default_instance();

  void Swap(PolarExtra* other);

  // implements Message ----------------------------------------------

  inline PolarExtra* New() const { return New(NULL); }

  PolarExtra* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PolarExtra& from);
  void MergeFrom(const PolarExtra& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PolarExtra* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes serverId = 1;
  bool has_serverid() const;
  void clear_serverid();
  static const int kServerIdFieldNumber = 1;
  const ::std::string& serverid() const;
  void set_serverid(const ::std::string& value);
  void set_serverid(const char* value);
  void set_serverid(const void* value, size_t size);
  ::std::string* mutable_serverid();
  ::std::string* release_serverid();
  void set_allocated_serverid(::std::string* serverid);

  // optional uint32 port = 2;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // optional uint64 applyLsn = 3;
  bool has_applylsn() const;
  void clear_applylsn();
  static const int kApplyLsnFieldNumber = 3;
  ::google::protobuf::uint64 applylsn() const;
  void set_applylsn(::google::protobuf::uint64 value);

  // optional uint64 purgeLsn = 4;
  bool has_purgelsn() const;
  void clear_purgelsn();
  static const int kPurgeLsnFieldNumber = 4;
  ::google::protobuf::uint64 purgelsn() const;
  void set_purgelsn(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:alisql.PolarExtra)
 private:
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_applylsn();
  inline void clear_has_applylsn();
  inline void set_has_purgelsn();
  inline void clear_has_purgelsn();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr serverid_;
  ::google::protobuf::uint64 applylsn_;
  ::google::protobuf::uint64 purgelsn_;
  ::google::protobuf::uint32 port_;
  friend void  protobuf_AddDesc_paxos_2eproto();
  friend void protobuf_AssignDesc_paxos_2eproto();
  friend void protobuf_ShutdownFile_paxos_2eproto();

  void InitAsDefaultInstance();
  static PolarExtra* default_instance_;
};
// -------------------------------------------------------------------

class PaxosMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:alisql.PaxosMsg) */ {
 public:
  PaxosMsg();
  virtual ~PaxosMsg();

  PaxosMsg(const PaxosMsg& from);

  inline PaxosMsg& operator=(const PaxosMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PaxosMsg& default_instance();

  void Swap(PaxosMsg* other);

  // implements Message ----------------------------------------------

  inline PaxosMsg* New() const { return New(NULL); }

  PaxosMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PaxosMsg& from);
  void MergeFrom(const PaxosMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PaxosMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 configId = 1;
  bool has_configid() const;
  void clear_configid();
  static const int kConfigIdFieldNumber = 1;
  ::google::protobuf::uint64 configid() const;
  void set_configid(::google::protobuf::uint64 value);

  // required uint64 clusterId = 2;
  bool has_clusterid() const;
  void clear_clusterid();
  static const int kClusterIdFieldNumber = 2;
  ::google::protobuf::uint64 clusterid() const;
  void set_clusterid(::google::protobuf::uint64 value);

  // required uint64 serverId = 3;
  bool has_serverid() const;
  void clear_serverid();
  static const int kServerIdFieldNumber = 3;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // required int32 msgType = 4;
  bool has_msgtype() const;
  void clear_msgtype();
  static const int kMsgTypeFieldNumber = 4;
  ::google::protobuf::int32 msgtype() const;
  void set_msgtype(::google::protobuf::int32 value);

  // required uint64 term = 5;
  bool has_term() const;
  void clear_term();
  static const int kTermFieldNumber = 5;
  ::google::protobuf::uint64 term() const;
  void set_term(::google::protobuf::uint64 value);

  // required uint64 msgId = 6;
  bool has_msgid() const;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 6;
  ::google::protobuf::uint64 msgid() const;
  void set_msgid(::google::protobuf::uint64 value);

  // optional uint64 leaderId = 7;
  bool has_leaderid() const;
  void clear_leaderid();
  static const int kLeaderIdFieldNumber = 7;
  ::google::protobuf::uint64 leaderid() const;
  void set_leaderid(::google::protobuf::uint64 value);

  // optional uint64 prevLogIndex = 8;
  bool has_prevlogindex() const;
  void clear_prevlogindex();
  static const int kPrevLogIndexFieldNumber = 8;
  ::google::protobuf::uint64 prevlogindex() const;
  void set_prevlogindex(::google::protobuf::uint64 value);

  // optional uint64 prevLogTerm = 9;
  bool has_prevlogterm() const;
  void clear_prevlogterm();
  static const int kPrevLogTermFieldNumber = 9;
  ::google::protobuf::uint64 prevlogterm() const;
  void set_prevlogterm(::google::protobuf::uint64 value);

  // repeated .alisql.LogEntry entries = 10;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 10;
  const ::alisql::LogEntry& entries(int index) const;
  ::alisql::LogEntry* mutable_entries(int index);
  ::alisql::LogEntry* add_entries();
  ::google::protobuf::RepeatedPtrField< ::alisql::LogEntry >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::alisql::LogEntry >&
      entries() const;

  // optional uint64 commitIndex = 11;
  bool has_commitindex() const;
  void clear_commitindex();
  static const int kCommitIndexFieldNumber = 11;
  ::google::protobuf::uint64 commitindex() const;
  void set_commitindex(::google::protobuf::uint64 value);

  // optional bool nocache = 12;
  bool has_nocache() const;
  void clear_nocache();
  static const int kNocacheFieldNumber = 12;
  bool nocache() const;
  void set_nocache(bool value);

  // optional bool isSuccess = 13;
  bool has_issuccess() const;
  void clear_issuccess();
  static const int kIsSuccessFieldNumber = 13;
  bool issuccess() const;
  void set_issuccess(bool value);

  // optional uint64 candidateId = 14;
  bool has_candidateid() const;
  void clear_candidateid();
  static const int kCandidateIdFieldNumber = 14;
  ::google::protobuf::uint64 candidateid() const;
  void set_candidateid(::google::protobuf::uint64 value);

  // optional uint64 lastLogIndex = 15;
  bool has_lastlogindex() const;
  void clear_lastlogindex();
  static const int kLastLogIndexFieldNumber = 15;
  ::google::protobuf::uint64 lastlogindex() const;
  void set_lastlogindex(::google::protobuf::uint64 value);

  // optional uint64 lastLogTerm = 16;
  bool has_lastlogterm() const;
  void clear_lastlogterm();
  static const int kLastLogTermFieldNumber = 16;
  ::google::protobuf::uint64 lastlogterm() const;
  void set_lastlogterm(::google::protobuf::uint64 value);

  // optional uint64 force = 17;
  bool has_force() const;
  void clear_force();
  static const int kForceFieldNumber = 17;
  ::google::protobuf::uint64 force() const;
  void set_force(::google::protobuf::uint64 value);

  // optional bytes addr = 18;
  bool has_addr() const;
  void clear_addr();
  static const int kAddrFieldNumber = 18;
  const ::std::string& addr() const;
  void set_addr(const ::std::string& value);
  void set_addr(const char* value);
  void set_addr(const void* value, size_t size);
  ::std::string* mutable_addr();
  ::std::string* release_addr();
  void set_allocated_addr(::std::string* addr);

  // optional bool voteGranted = 19;
  bool has_votegranted() const;
  void clear_votegranted();
  static const int kVoteGrantedFieldNumber = 19;
  bool votegranted() const;
  void set_votegranted(bool value);

  // optional bool ignoreCheck = 20;
  bool has_ignorecheck() const;
  void clear_ignorecheck();
  static const int kIgnoreCheckFieldNumber = 20;
  bool ignorecheck() const;
  void set_ignorecheck(bool value);

  // optional uint64 lcType = 21;
  bool has_lctype() const;
  void clear_lctype();
  static const int kLcTypeFieldNumber = 21;
  ::google::protobuf::uint64 lctype() const;
  void set_lctype(::google::protobuf::uint64 value);

  // optional uint64 minMatchIndex = 22;
  bool has_minmatchindex() const;
  void clear_minmatchindex();
  static const int kMinMatchIndexFieldNumber = 22;
  ::google::protobuf::uint64 minmatchindex() const;
  void set_minmatchindex(::google::protobuf::uint64 value);

  // optional uint64 appliedIndex = 23;
  bool has_appliedindex() const;
  void clear_appliedindex();
  static const int kAppliedIndexFieldNumber = 23;
  ::google::protobuf::uint64 appliedindex() const;
  void set_appliedindex(::google::protobuf::uint64 value);

  // optional bool appendError = 24;
  bool has_appenderror() const;
  void clear_appenderror();
  static const int kAppendErrorFieldNumber = 24;
  bool appenderror() const;
  void set_appenderror(bool value);

  // optional uint64 newClusterId = 25;
  bool has_newclusterid() const;
  void clear_newclusterid();
  static const int kNewClusterIdFieldNumber = 25;
  ::google::protobuf::uint64 newclusterid() const;
  void set_newclusterid(::google::protobuf::uint64 value);

  // repeated .alisql.ClusterInfoEntry ciEntries = 26;
  int cientries_size() const;
  void clear_cientries();
  static const int kCiEntriesFieldNumber = 26;
  const ::alisql::ClusterInfoEntry& cientries(int index) const;
  ::alisql::ClusterInfoEntry* mutable_cientries(int index);
  ::alisql::ClusterInfoEntry* add_cientries();
  ::google::protobuf::RepeatedPtrField< ::alisql::ClusterInfoEntry >*
      mutable_cientries();
  const ::google::protobuf::RepeatedPtrField< ::alisql::ClusterInfoEntry >&
      cientries() const;

  // optional uint32 role = 27;
  bool has_role() const;
  void clear_role();
  static const int kRoleFieldNumber = 27;
  ::google::protobuf::uint32 role() const;
  void set_role(::google::protobuf::uint32 value);

  // optional .alisql.CompressedLogEntries compressedEntries = 28;
  bool has_compressedentries() const;
  void clear_compressedentries();
  static const int kCompressedEntriesFieldNumber = 28;
  const ::alisql::CompressedLogEntries& compressedentries() const;
  ::alisql::CompressedLogEntries* mutable_compressedentries();
  ::alisql::CompressedLogEntries* release_compressedentries();
  void set_allocated_compressedentries(::alisql::CompressedLogEntries* compressedentries);

  // optional bytes extra = 29;
  bool has_extra() const;
  void clear_extra();
  static const int kExtraFieldNumber = 29;
  const ::std::string& extra() const;
  void set_extra(const ::std::string& value);
  void set_extra(const char* value);
  void set_extra(const void* value, size_t size);
  ::std::string* mutable_extra();
  ::std::string* release_extra();
  void set_allocated_extra(::std::string* extra);

  // @@protoc_insertion_point(class_scope:alisql.PaxosMsg)
 private:
  inline void set_has_configid();
  inline void clear_has_configid();
  inline void set_has_clusterid();
  inline void clear_has_clusterid();
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_term();
  inline void clear_has_term();
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_leaderid();
  inline void clear_has_leaderid();
  inline void set_has_prevlogindex();
  inline void clear_has_prevlogindex();
  inline void set_has_prevlogterm();
  inline void clear_has_prevlogterm();
  inline void set_has_commitindex();
  inline void clear_has_commitindex();
  inline void set_has_nocache();
  inline void clear_has_nocache();
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_candidateid();
  inline void clear_has_candidateid();
  inline void set_has_lastlogindex();
  inline void clear_has_lastlogindex();
  inline void set_has_lastlogterm();
  inline void clear_has_lastlogterm();
  inline void set_has_force();
  inline void clear_has_force();
  inline void set_has_addr();
  inline void clear_has_addr();
  inline void set_has_votegranted();
  inline void clear_has_votegranted();
  inline void set_has_ignorecheck();
  inline void clear_has_ignorecheck();
  inline void set_has_lctype();
  inline void clear_has_lctype();
  inline void set_has_minmatchindex();
  inline void clear_has_minmatchindex();
  inline void set_has_appliedindex();
  inline void clear_has_appliedindex();
  inline void set_has_appenderror();
  inline void clear_has_appenderror();
  inline void set_has_newclusterid();
  inline void clear_has_newclusterid();
  inline void set_has_role();
  inline void clear_has_role();
  inline void set_has_compressedentries();
  inline void clear_has_compressedentries();
  inline void set_has_extra();
  inline void clear_has_extra();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 configid_;
  ::google::protobuf::uint64 clusterid_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint64 term_;
  ::google::protobuf::uint64 msgid_;
  ::google::protobuf::uint64 leaderid_;
  ::google::protobuf::uint64 prevlogindex_;
  ::google::protobuf::uint64 prevlogterm_;
  ::google::protobuf::RepeatedPtrField< ::alisql::LogEntry > entries_;
  ::google::protobuf::uint64 commitindex_;
  ::google::protobuf::int32 msgtype_;
  bool nocache_;
  bool issuccess_;
  bool votegranted_;
  bool ignorecheck_;
  ::google::protobuf::uint64 candidateid_;
  ::google::protobuf::uint64 lastlogindex_;
  ::google::protobuf::uint64 lastlogterm_;
  ::google::protobuf::uint64 force_;
  ::google::protobuf::internal::ArenaStringPtr addr_;
  ::google::protobuf::uint64 lctype_;
  ::google::protobuf::uint64 minmatchindex_;
  ::google::protobuf::uint64 appliedindex_;
  ::google::protobuf::uint64 newclusterid_;
  bool appenderror_;
  ::google::protobuf::uint32 role_;
  ::google::protobuf::RepeatedPtrField< ::alisql::ClusterInfoEntry > cientries_;
  ::alisql::CompressedLogEntries* compressedentries_;
  ::google::protobuf::internal::ArenaStringPtr extra_;
  friend void  protobuf_AddDesc_paxos_2eproto();
  friend void protobuf_AssignDesc_paxos_2eproto();
  friend void protobuf_ShutdownFile_paxos_2eproto();

  void InitAsDefaultInstance();
  static PaxosMsg* default_instance_;
};
// -------------------------------------------------------------------

class TestMsg1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:alisql.TestMsg1) */ {
 public:
  TestMsg1();
  virtual ~TestMsg1();

  TestMsg1(const TestMsg1& from);

  inline TestMsg1& operator=(const TestMsg1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestMsg1& default_instance();

  void Swap(TestMsg1* other);

  // implements Message ----------------------------------------------

  inline TestMsg1* New() const { return New(NULL); }

  TestMsg1* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TestMsg1& from);
  void MergeFrom(const TestMsg1& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TestMsg1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional uint64 c1 = 2;
  bool has_c1() const;
  void clear_c1();
  static const int kC1FieldNumber = 2;
  ::google::protobuf::uint64 c1() const;
  void set_c1(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:alisql.TestMsg1)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_c1();
  inline void clear_has_c1();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 c1_;
  friend void  protobuf_AddDesc_paxos_2eproto();
  friend void protobuf_AssignDesc_paxos_2eproto();
  friend void protobuf_ShutdownFile_paxos_2eproto();

  void InitAsDefaultInstance();
  static TestMsg1* default_instance_;
};
// -------------------------------------------------------------------

class TestMsg2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:alisql.TestMsg2) */ {
 public:
  TestMsg2();
  virtual ~TestMsg2();

  TestMsg2(const TestMsg2& from);

  inline TestMsg2& operator=(const TestMsg2& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestMsg2& default_instance();

  void Swap(TestMsg2* other);

  // implements Message ----------------------------------------------

  inline TestMsg2* New() const { return New(NULL); }

  TestMsg2* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TestMsg2& from);
  void MergeFrom(const TestMsg2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TestMsg2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional uint64 c1 = 2;
  bool has_c1() const;
  void clear_c1();
  static const int kC1FieldNumber = 2;
  ::google::protobuf::uint64 c1() const;
  void set_c1(::google::protobuf::uint64 value);

  // repeated uint64 c2 = 3;
  int c2_size() const;
  void clear_c2();
  static const int kC2FieldNumber = 3;
  ::google::protobuf::uint64 c2(int index) const;
  void set_c2(int index, ::google::protobuf::uint64 value);
  void add_c2(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      c2() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_c2();

  // @@protoc_insertion_point(class_scope:alisql.TestMsg2)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_c1();
  inline void clear_has_c1();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 c1_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > c2_;
  friend void  protobuf_AddDesc_paxos_2eproto();
  friend void protobuf_AssignDesc_paxos_2eproto();
  friend void protobuf_ShutdownFile_paxos_2eproto();

  void InitAsDefaultInstance();
  static TestMsg2* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LogEntry

// required uint64 term = 1;
inline bool LogEntry::has_term() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogEntry::set_has_term() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogEntry::clear_has_term() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogEntry::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::uint64 LogEntry::term() const {
  // @@protoc_insertion_point(field_get:alisql.LogEntry.term)
  return term_;
}
inline void LogEntry::set_term(::google::protobuf::uint64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:alisql.LogEntry.term)
}

// required uint64 index = 2;
inline bool LogEntry::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogEntry::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogEntry::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogEntry::clear_index() {
  index_ = GOOGLE_ULONGLONG(0);
  clear_has_index();
}
inline ::google::protobuf::uint64 LogEntry::index() const {
  // @@protoc_insertion_point(field_get:alisql.LogEntry.index)
  return index_;
}
inline void LogEntry::set_index(::google::protobuf::uint64 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:alisql.LogEntry.index)
}

// required uint64 opType = 3;
inline bool LogEntry::has_optype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogEntry::set_has_optype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogEntry::clear_has_optype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogEntry::clear_optype() {
  optype_ = GOOGLE_ULONGLONG(0);
  clear_has_optype();
}
inline ::google::protobuf::uint64 LogEntry::optype() const {
  // @@protoc_insertion_point(field_get:alisql.LogEntry.opType)
  return optype_;
}
inline void LogEntry::set_optype(::google::protobuf::uint64 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:alisql.LogEntry.opType)
}

// optional bytes ikey = 4;
inline bool LogEntry::has_ikey() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LogEntry::set_has_ikey() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LogEntry::clear_has_ikey() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LogEntry::clear_ikey() {
  ikey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ikey();
}
inline const ::std::string& LogEntry::ikey() const {
  // @@protoc_insertion_point(field_get:alisql.LogEntry.ikey)
  return ikey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogEntry::set_ikey(const ::std::string& value) {
  set_has_ikey();
  ikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:alisql.LogEntry.ikey)
}
inline void LogEntry::set_ikey(const char* value) {
  set_has_ikey();
  ikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:alisql.LogEntry.ikey)
}
inline void LogEntry::set_ikey(const void* value, size_t size) {
  set_has_ikey();
  ikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:alisql.LogEntry.ikey)
}
inline ::std::string* LogEntry::mutable_ikey() {
  set_has_ikey();
  // @@protoc_insertion_point(field_mutable:alisql.LogEntry.ikey)
  return ikey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogEntry::release_ikey() {
  // @@protoc_insertion_point(field_release:alisql.LogEntry.ikey)
  clear_has_ikey();
  return ikey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogEntry::set_allocated_ikey(::std::string* ikey) {
  if (ikey != NULL) {
    set_has_ikey();
  } else {
    clear_has_ikey();
  }
  ikey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ikey);
  // @@protoc_insertion_point(field_set_allocated:alisql.LogEntry.ikey)
}

// optional bytes value = 5;
inline bool LogEntry::has_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LogEntry::set_has_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LogEntry::clear_has_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LogEntry::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& LogEntry::value() const {
  // @@protoc_insertion_point(field_get:alisql.LogEntry.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogEntry::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:alisql.LogEntry.value)
}
inline void LogEntry::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:alisql.LogEntry.value)
}
inline void LogEntry::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:alisql.LogEntry.value)
}
inline ::std::string* LogEntry::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:alisql.LogEntry.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogEntry::release_value() {
  // @@protoc_insertion_point(field_release:alisql.LogEntry.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogEntry::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:alisql.LogEntry.value)
}

// optional uint64 info = 6;
inline bool LogEntry::has_info() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LogEntry::set_has_info() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LogEntry::clear_has_info() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LogEntry::clear_info() {
  info_ = GOOGLE_ULONGLONG(0);
  clear_has_info();
}
inline ::google::protobuf::uint64 LogEntry::info() const {
  // @@protoc_insertion_point(field_get:alisql.LogEntry.info)
  return info_;
}
inline void LogEntry::set_info(::google::protobuf::uint64 value) {
  set_has_info();
  info_ = value;
  // @@protoc_insertion_point(field_set:alisql.LogEntry.info)
}

// optional uint64 checksum = 7;
inline bool LogEntry::has_checksum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LogEntry::set_has_checksum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LogEntry::clear_has_checksum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LogEntry::clear_checksum() {
  checksum_ = GOOGLE_ULONGLONG(0);
  clear_has_checksum();
}
inline ::google::protobuf::uint64 LogEntry::checksum() const {
  // @@protoc_insertion_point(field_get:alisql.LogEntry.checksum)
  return checksum_;
}
inline void LogEntry::set_checksum(::google::protobuf::uint64 value) {
  set_has_checksum();
  checksum_ = value;
  // @@protoc_insertion_point(field_set:alisql.LogEntry.checksum)
}

// -------------------------------------------------------------------

// CompressedLogEntries

// required uint32 type = 1;
inline bool CompressedLogEntries::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CompressedLogEntries::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CompressedLogEntries::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CompressedLogEntries::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CompressedLogEntries::type() const {
  // @@protoc_insertion_point(field_get:alisql.CompressedLogEntries.type)
  return type_;
}
inline void CompressedLogEntries::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:alisql.CompressedLogEntries.type)
}

// required uint32 rawSize = 2;
inline bool CompressedLogEntries::has_rawsize() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CompressedLogEntries::set_has_rawsize() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CompressedLogEntries::clear_has_rawsize() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CompressedLogEntries::clear_rawsize() {
  rawsize_ = 0u;
  clear_has_rawsize();
}
inline ::google::protobuf::uint32 CompressedLogEntries::rawsize() const {
  // @@protoc_insertion_point(field_get:alisql.CompressedLogEntries.rawSize)
  return rawsize_;
}
inline void CompressedLogEntries::set_rawsize(::google::protobuf::uint32 value) {
  set_has_rawsize();
  rawsize_ = value;
  // @@protoc_insertion_point(field_set:alisql.CompressedLogEntries.rawSize)
}

// required bytes data = 3;
inline bool CompressedLogEntries::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CompressedLogEntries::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CompressedLogEntries::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CompressedLogEntries::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& CompressedLogEntries::data() const {
  // @@protoc_insertion_point(field_get:alisql.CompressedLogEntries.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CompressedLogEntries::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:alisql.CompressedLogEntries.data)
}
inline void CompressedLogEntries::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:alisql.CompressedLogEntries.data)
}
inline void CompressedLogEntries::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:alisql.CompressedLogEntries.data)
}
inline ::std::string* CompressedLogEntries::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:alisql.CompressedLogEntries.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CompressedLogEntries::release_data() {
  // @@protoc_insertion_point(field_release:alisql.CompressedLogEntries.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CompressedLogEntries::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:alisql.CompressedLogEntries.data)
}

// optional uint32 checksum = 4;
inline bool CompressedLogEntries::has_checksum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CompressedLogEntries::set_has_checksum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CompressedLogEntries::clear_has_checksum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CompressedLogEntries::clear_checksum() {
  checksum_ = 0u;
  clear_has_checksum();
}
inline ::google::protobuf::uint32 CompressedLogEntries::checksum() const {
  // @@protoc_insertion_point(field_get:alisql.CompressedLogEntries.checksum)
  return checksum_;
}
inline void CompressedLogEntries::set_checksum(::google::protobuf::uint32 value) {
  set_has_checksum();
  checksum_ = value;
  // @@protoc_insertion_point(field_set:alisql.CompressedLogEntries.checksum)
}

// -------------------------------------------------------------------

// ConfigureChangeValue

// optional int32 ccType = 1;
inline bool ConfigureChangeValue::has_cctype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigureChangeValue::set_has_cctype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigureChangeValue::clear_has_cctype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigureChangeValue::clear_cctype() {
  cctype_ = 0;
  clear_has_cctype();
}
inline ::google::protobuf::int32 ConfigureChangeValue::cctype() const {
  // @@protoc_insertion_point(field_get:alisql.ConfigureChangeValue.ccType)
  return cctype_;
}
inline void ConfigureChangeValue::set_cctype(::google::protobuf::int32 value) {
  set_has_cctype();
  cctype_ = value;
  // @@protoc_insertion_point(field_set:alisql.ConfigureChangeValue.ccType)
}

// optional int32 opType = 2;
inline bool ConfigureChangeValue::has_optype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigureChangeValue::set_has_optype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigureChangeValue::clear_has_optype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigureChangeValue::clear_optype() {
  optype_ = 0;
  clear_has_optype();
}
inline ::google::protobuf::int32 ConfigureChangeValue::optype() const {
  // @@protoc_insertion_point(field_get:alisql.ConfigureChangeValue.opType)
  return optype_;
}
inline void ConfigureChangeValue::set_optype(::google::protobuf::int32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:alisql.ConfigureChangeValue.opType)
}

// repeated bytes addrs = 3;
inline int ConfigureChangeValue::addrs_size() const {
  return addrs_.size();
}
inline void ConfigureChangeValue::clear_addrs() {
  addrs_.Clear();
}
inline const ::std::string& ConfigureChangeValue::addrs(int index) const {
  // @@protoc_insertion_point(field_get:alisql.ConfigureChangeValue.addrs)
  return addrs_.Get(index);
}
inline ::std::string* ConfigureChangeValue::mutable_addrs(int index) {
  // @@protoc_insertion_point(field_mutable:alisql.ConfigureChangeValue.addrs)
  return addrs_.Mutable(index);
}
inline void ConfigureChangeValue::set_addrs(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:alisql.ConfigureChangeValue.addrs)
  addrs_.Mutable(index)->assign(value);
}
inline void ConfigureChangeValue::set_addrs(int index, const char* value) {
  addrs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:alisql.ConfigureChangeValue.addrs)
}
inline void ConfigureChangeValue::set_addrs(int index, const void* value, size_t size) {
  addrs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:alisql.ConfigureChangeValue.addrs)
}
inline ::std::string* ConfigureChangeValue::add_addrs() {
  // @@protoc_insertion_point(field_add_mutable:alisql.ConfigureChangeValue.addrs)
  return addrs_.Add();
}
inline void ConfigureChangeValue::add_addrs(const ::std::string& value) {
  addrs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:alisql.ConfigureChangeValue.addrs)
}
inline void ConfigureChangeValue::add_addrs(const char* value) {
  addrs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:alisql.ConfigureChangeValue.addrs)
}
inline void ConfigureChangeValue::add_addrs(const void* value, size_t size) {
  addrs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:alisql.ConfigureChangeValue.addrs)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ConfigureChangeValue::addrs() const {
  // @@protoc_insertion_point(field_list:alisql.ConfigureChangeValue.addrs)
  return addrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ConfigureChangeValue::mutable_addrs() {
  // @@protoc_insertion_point(field_mutable_list:alisql.ConfigureChangeValue.addrs)
  return &addrs_;
}

// repeated bytes allServers = 4;
inline int ConfigureChangeValue::allservers_size() const {
  return allservers_.size();
}
inline void ConfigureChangeValue::clear_allservers() {
  allservers_.Clear();
}
inline const ::std::string& ConfigureChangeValue::allservers(int index) const {
  // @@protoc_insertion_point(field_get:alisql.ConfigureChangeValue.allServers)
  return allservers_.Get(index);
}
inline ::std::string* ConfigureChangeValue::mutable_allservers(int index) {
  // @@protoc_insertion_point(field_mutable:alisql.ConfigureChangeValue.allServers)
  return allservers_.Mutable(index);
}
inline void ConfigureChangeValue::set_allservers(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:alisql.ConfigureChangeValue.allServers)
  allservers_.Mutable(index)->assign(value);
}
inline void ConfigureChangeValue::set_allservers(int index, const char* value) {
  allservers_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:alisql.ConfigureChangeValue.allServers)
}
inline void ConfigureChangeValue::set_allservers(int index, const void* value, size_t size) {
  allservers_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:alisql.ConfigureChangeValue.allServers)
}
inline ::std::string* ConfigureChangeValue::add_allservers() {
  // @@protoc_insertion_point(field_add_mutable:alisql.ConfigureChangeValue.allServers)
  return allservers_.Add();
}
inline void ConfigureChangeValue::add_allservers(const ::std::string& value) {
  allservers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:alisql.ConfigureChangeValue.allServers)
}
inline void ConfigureChangeValue::add_allservers(const char* value) {
  allservers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:alisql.ConfigureChangeValue.allServers)
}
inline void ConfigureChangeValue::add_allservers(const void* value, size_t size) {
  allservers_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:alisql.ConfigureChangeValue.allServers)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ConfigureChangeValue::allservers() const {
  // @@protoc_insertion_point(field_list:alisql.ConfigureChangeValue.allServers)
  return allservers_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ConfigureChangeValue::mutable_allservers() {
  // @@protoc_insertion_point(field_mutable_list:alisql.ConfigureChangeValue.allServers)
  return &allservers_;
}

// repeated bytes allLearners = 5;
inline int ConfigureChangeValue::alllearners_size() const {
  return alllearners_.size();
}
inline void ConfigureChangeValue::clear_alllearners() {
  alllearners_.Clear();
}
inline const ::std::string& ConfigureChangeValue::alllearners(int index) const {
  // @@protoc_insertion_point(field_get:alisql.ConfigureChangeValue.allLearners)
  return alllearners_.Get(index);
}
inline ::std::string* ConfigureChangeValue::mutable_alllearners(int index) {
  // @@protoc_insertion_point(field_mutable:alisql.ConfigureChangeValue.allLearners)
  return alllearners_.Mutable(index);
}
inline void ConfigureChangeValue::set_alllearners(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:alisql.ConfigureChangeValue.allLearners)
  alllearners_.Mutable(index)->assign(value);
}
inline void ConfigureChangeValue::set_alllearners(int index, const char* value) {
  alllearners_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:alisql.ConfigureChangeValue.allLearners)
}
inline void ConfigureChangeValue::set_alllearners(int index, const void* value, size_t size) {
  alllearners_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:alisql.ConfigureChangeValue.allLearners)
}
inline ::std::string* ConfigureChangeValue::add_alllearners() {
  // @@protoc_insertion_point(field_add_mutable:alisql.ConfigureChangeValue.allLearners)
  return alllearners_.Add();
}
inline void ConfigureChangeValue::add_alllearners(const ::std::string& value) {
  alllearners_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:alisql.ConfigureChangeValue.allLearners)
}
inline void ConfigureChangeValue::add_alllearners(const char* value) {
  alllearners_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:alisql.ConfigureChangeValue.allLearners)
}
inline void ConfigureChangeValue::add_alllearners(const void* value, size_t size) {
  alllearners_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:alisql.ConfigureChangeValue.allLearners)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ConfigureChangeValue::alllearners() const {
  // @@protoc_insertion_point(field_list:alisql.ConfigureChangeValue.allLearners)
  return alllearners_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ConfigureChangeValue::mutable_alllearners() {
  // @@protoc_insertion_point(field_mutable_list:alisql.ConfigureChangeValue.allLearners)
  return &alllearners_;
}

// optional uint64 serverId = 6;
inline bool ConfigureChangeValue::has_serverid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConfigureChangeValue::set_has_serverid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ConfigureChangeValue::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ConfigureChangeValue::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
  clear_has_serverid();
}
inline ::google::protobuf::uint64 ConfigureChangeValue::serverid() const {
  // @@protoc_insertion_point(field_get:alisql.ConfigureChangeValue.serverId)
  return serverid_;
}
inline void ConfigureChangeValue::set_serverid(::google::protobuf::uint64 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:alisql.ConfigureChangeValue.serverId)
}

// optional uint32 forceSync = 7;
inline bool ConfigureChangeValue::has_forcesync() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ConfigureChangeValue::set_has_forcesync() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ConfigureChangeValue::clear_has_forcesync() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ConfigureChangeValue::clear_forcesync() {
  forcesync_ = 0u;
  clear_has_forcesync();
}
inline ::google::protobuf::uint32 ConfigureChangeValue::forcesync() const {
  // @@protoc_insertion_point(field_get:alisql.ConfigureChangeValue.forceSync)
  return forcesync_;
}
inline void ConfigureChangeValue::set_forcesync(::google::protobuf::uint32 value) {
  set_has_forcesync();
  forcesync_ = value;
  // @@protoc_insertion_point(field_set:alisql.ConfigureChangeValue.forceSync)
}

// optional uint32 electionWeight = 8;
inline bool ConfigureChangeValue::has_electionweight() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ConfigureChangeValue::set_has_electionweight() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ConfigureChangeValue::clear_has_electionweight() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ConfigureChangeValue::clear_electionweight() {
  electionweight_ = 0u;
  clear_has_electionweight();
}
inline ::google::protobuf::uint32 ConfigureChangeValue::electionweight() const {
  // @@protoc_insertion_point(field_get:alisql.ConfigureChangeValue.electionWeight)
  return electionweight_;
}
inline void ConfigureChangeValue::set_electionweight(::google::protobuf::uint32 value) {
  set_has_electionweight();
  electionweight_ = value;
  // @@protoc_insertion_point(field_set:alisql.ConfigureChangeValue.electionWeight)
}

// optional uint64 learnerSource = 9;
inline bool ConfigureChangeValue::has_learnersource() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ConfigureChangeValue::set_has_learnersource() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ConfigureChangeValue::clear_has_learnersource() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ConfigureChangeValue::clear_learnersource() {
  learnersource_ = GOOGLE_ULONGLONG(0);
  clear_has_learnersource();
}
inline ::google::protobuf::uint64 ConfigureChangeValue::learnersource() const {
  // @@protoc_insertion_point(field_get:alisql.ConfigureChangeValue.learnerSource)
  return learnersource_;
}
inline void ConfigureChangeValue::set_learnersource(::google::protobuf::uint64 value) {
  set_has_learnersource();
  learnersource_ = value;
  // @@protoc_insertion_point(field_set:alisql.ConfigureChangeValue.learnerSource)
}

// optional bool applyMode = 10;
inline bool ConfigureChangeValue::has_applymode() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ConfigureChangeValue::set_has_applymode() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ConfigureChangeValue::clear_has_applymode() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ConfigureChangeValue::clear_applymode() {
  applymode_ = false;
  clear_has_applymode();
}
inline bool ConfigureChangeValue::applymode() const {
  // @@protoc_insertion_point(field_get:alisql.ConfigureChangeValue.applyMode)
  return applymode_;
}
inline void ConfigureChangeValue::set_applymode(bool value) {
  set_has_applymode();
  applymode_ = value;
  // @@protoc_insertion_point(field_set:alisql.ConfigureChangeValue.applyMode)
}

// -------------------------------------------------------------------

// ClusterInfoEntry

// required uint64 serverId = 1;
inline bool ClusterInfoEntry::has_serverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClusterInfoEntry::set_has_serverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClusterInfoEntry::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClusterInfoEntry::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
  clear_has_serverid();
}
inline ::google::protobuf::uint64 ClusterInfoEntry::serverid() const {
  // @@protoc_insertion_point(field_get:alisql.ClusterInfoEntry.serverId)
  return serverid_;
}
inline void ClusterInfoEntry::set_serverid(::google::protobuf::uint64 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:alisql.ClusterInfoEntry.serverId)
}

// optional uint64 matchIndex = 2;
inline bool ClusterInfoEntry::has_matchindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClusterInfoEntry::set_has_matchindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClusterInfoEntry::clear_has_matchindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClusterInfoEntry::clear_matchindex() {
  matchindex_ = GOOGLE_ULONGLONG(0);
  clear_has_matchindex();
}
inline ::google::protobuf::uint64 ClusterInfoEntry::matchindex() const {
  // @@protoc_insertion_point(field_get:alisql.ClusterInfoEntry.matchIndex)
  return matchindex_;
}
inline void ClusterInfoEntry::set_matchindex(::google::protobuf::uint64 value) {
  set_has_matchindex();
  matchindex_ = value;
  // @@protoc_insertion_point(field_set:alisql.ClusterInfoEntry.matchIndex)
}

// optional uint64 nextIndex = 3;
inline bool ClusterInfoEntry::has_nextindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClusterInfoEntry::set_has_nextindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClusterInfoEntry::clear_has_nextindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClusterInfoEntry::clear_nextindex() {
  nextindex_ = GOOGLE_ULONGLONG(0);
  clear_has_nextindex();
}
inline ::google::protobuf::uint64 ClusterInfoEntry::nextindex() const {
  // @@protoc_insertion_point(field_get:alisql.ClusterInfoEntry.nextIndex)
  return nextindex_;
}
inline void ClusterInfoEntry::set_nextindex(::google::protobuf::uint64 value) {
  set_has_nextindex();
  nextindex_ = value;
  // @@protoc_insertion_point(field_set:alisql.ClusterInfoEntry.nextIndex)
}

// optional uint32 role = 4;
inline bool ClusterInfoEntry::has_role() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClusterInfoEntry::set_has_role() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClusterInfoEntry::clear_has_role() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClusterInfoEntry::clear_role() {
  role_ = 0u;
  clear_has_role();
}
inline ::google::protobuf::uint32 ClusterInfoEntry::role() const {
  // @@protoc_insertion_point(field_get:alisql.ClusterInfoEntry.role)
  return role_;
}
inline void ClusterInfoEntry::set_role(::google::protobuf::uint32 value) {
  set_has_role();
  role_ = value;
  // @@protoc_insertion_point(field_set:alisql.ClusterInfoEntry.role)
}

// optional uint64 hasVoted = 5;
inline bool ClusterInfoEntry::has_hasvoted() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClusterInfoEntry::set_has_hasvoted() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClusterInfoEntry::clear_has_hasvoted() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClusterInfoEntry::clear_hasvoted() {
  hasvoted_ = GOOGLE_ULONGLONG(0);
  clear_has_hasvoted();
}
inline ::google::protobuf::uint64 ClusterInfoEntry::hasvoted() const {
  // @@protoc_insertion_point(field_get:alisql.ClusterInfoEntry.hasVoted)
  return hasvoted_;
}
inline void ClusterInfoEntry::set_hasvoted(::google::protobuf::uint64 value) {
  set_has_hasvoted();
  hasvoted_ = value;
  // @@protoc_insertion_point(field_set:alisql.ClusterInfoEntry.hasVoted)
}

// optional uint32 forceSync = 6;
inline bool ClusterInfoEntry::has_forcesync() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClusterInfoEntry::set_has_forcesync() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClusterInfoEntry::clear_has_forcesync() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClusterInfoEntry::clear_forcesync() {
  forcesync_ = 0u;
  clear_has_forcesync();
}
inline ::google::protobuf::uint32 ClusterInfoEntry::forcesync() const {
  // @@protoc_insertion_point(field_get:alisql.ClusterInfoEntry.forceSync)
  return forcesync_;
}
inline void ClusterInfoEntry::set_forcesync(::google::protobuf::uint32 value) {
  set_has_forcesync();
  forcesync_ = value;
  // @@protoc_insertion_point(field_set:alisql.ClusterInfoEntry.forceSync)
}

// optional uint32 electionWeight = 7;
inline bool ClusterInfoEntry::has_electionweight() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClusterInfoEntry::set_has_electionweight() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ClusterInfoEntry::clear_has_electionweight() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ClusterInfoEntry::clear_electionweight() {
  electionweight_ = 0u;
  clear_has_electionweight();
}
inline ::google::protobuf::uint32 ClusterInfoEntry::electionweight() const {
  // @@protoc_insertion_point(field_get:alisql.ClusterInfoEntry.electionWeight)
  return electionweight_;
}
inline void ClusterInfoEntry::set_electionweight(::google::protobuf::uint32 value) {
  set_has_electionweight();
  electionweight_ = value;
  // @@protoc_insertion_point(field_set:alisql.ClusterInfoEntry.electionWeight)
}

// optional uint64 learnerSource = 8;
inline bool ClusterInfoEntry::has_learnersource() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ClusterInfoEntry::set_has_learnersource() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ClusterInfoEntry::clear_has_learnersource() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ClusterInfoEntry::clear_learnersource() {
  learnersource_ = GOOGLE_ULONGLONG(0);
  clear_has_learnersource();
}
inline ::google::protobuf::uint64 ClusterInfoEntry::learnersource() const {
  // @@protoc_insertion_point(field_get:alisql.ClusterInfoEntry.learnerSource)
  return learnersource_;
}
inline void ClusterInfoEntry::set_learnersource(::google::protobuf::uint64 value) {
  set_has_learnersource();
  learnersource_ = value;
  // @@protoc_insertion_point(field_set:alisql.ClusterInfoEntry.learnerSource)
}

// optional uint64 appliedIndex = 9;
inline bool ClusterInfoEntry::has_appliedindex() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ClusterInfoEntry::set_has_appliedindex() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ClusterInfoEntry::clear_has_appliedindex() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ClusterInfoEntry::clear_appliedindex() {
  appliedindex_ = GOOGLE_ULONGLONG(0);
  clear_has_appliedindex();
}
inline ::google::protobuf::uint64 ClusterInfoEntry::appliedindex() const {
  // @@protoc_insertion_point(field_get:alisql.ClusterInfoEntry.appliedIndex)
  return appliedindex_;
}
inline void ClusterInfoEntry::set_appliedindex(::google::protobuf::uint64 value) {
  set_has_appliedindex();
  appliedindex_ = value;
  // @@protoc_insertion_point(field_set:alisql.ClusterInfoEntry.appliedIndex)
}

// optional uint32 pipelining = 10;
inline bool ClusterInfoEntry::has_pipelining() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ClusterInfoEntry::set_has_pipelining() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ClusterInfoEntry::clear_has_pipelining() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ClusterInfoEntry::clear_pipelining() {
  pipelining_ = 0u;
  clear_has_pipelining();
}
inline ::google::protobuf::uint32 ClusterInfoEntry::pipelining() const {
  // @@protoc_insertion_point(field_get:alisql.ClusterInfoEntry.pipelining)
  return pipelining_;
}
inline void ClusterInfoEntry::set_pipelining(::google::protobuf::uint32 value) {
  set_has_pipelining();
  pipelining_ = value;
  // @@protoc_insertion_point(field_set:alisql.ClusterInfoEntry.pipelining)
}

// -------------------------------------------------------------------

// PolarExtra

// optional bytes serverId = 1;
inline bool PolarExtra::has_serverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PolarExtra::set_has_serverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PolarExtra::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PolarExtra::clear_serverid() {
  serverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_serverid();
}
inline const ::std::string& PolarExtra::serverid() const {
  // @@protoc_insertion_point(field_get:alisql.PolarExtra.serverId)
  return serverid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PolarExtra::set_serverid(const ::std::string& value) {
  set_has_serverid();
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:alisql.PolarExtra.serverId)
}
inline void PolarExtra::set_serverid(const char* value) {
  set_has_serverid();
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:alisql.PolarExtra.serverId)
}
inline void PolarExtra::set_serverid(const void* value, size_t size) {
  set_has_serverid();
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:alisql.PolarExtra.serverId)
}
inline ::std::string* PolarExtra::mutable_serverid() {
  set_has_serverid();
  // @@protoc_insertion_point(field_mutable:alisql.PolarExtra.serverId)
  return serverid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PolarExtra::release_serverid() {
  // @@protoc_insertion_point(field_release:alisql.PolarExtra.serverId)
  clear_has_serverid();
  return serverid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PolarExtra::set_allocated_serverid(::std::string* serverid) {
  if (serverid != NULL) {
    set_has_serverid();
  } else {
    clear_has_serverid();
  }
  serverid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serverid);
  // @@protoc_insertion_point(field_set_allocated:alisql.PolarExtra.serverId)
}

// optional uint32 port = 2;
inline bool PolarExtra::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PolarExtra::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PolarExtra::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PolarExtra::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 PolarExtra::port() const {
  // @@protoc_insertion_point(field_get:alisql.PolarExtra.port)
  return port_;
}
inline void PolarExtra::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:alisql.PolarExtra.port)
}

// optional uint64 applyLsn = 3;
inline bool PolarExtra::has_applylsn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PolarExtra::set_has_applylsn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PolarExtra::clear_has_applylsn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PolarExtra::clear_applylsn() {
  applylsn_ = GOOGLE_ULONGLONG(0);
  clear_has_applylsn();
}
inline ::google::protobuf::uint64 PolarExtra::applylsn() const {
  // @@protoc_insertion_point(field_get:alisql.PolarExtra.applyLsn)
  return applylsn_;
}
inline void PolarExtra::set_applylsn(::google::protobuf::uint64 value) {
  set_has_applylsn();
  applylsn_ = value;
  // @@protoc_insertion_point(field_set:alisql.PolarExtra.applyLsn)
}

// optional uint64 purgeLsn = 4;
inline bool PolarExtra::has_purgelsn() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PolarExtra::set_has_purgelsn() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PolarExtra::clear_has_purgelsn() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PolarExtra::clear_purgelsn() {
  purgelsn_ = GOOGLE_ULONGLONG(0);
  clear_has_purgelsn();
}
inline ::google::protobuf::uint64 PolarExtra::purgelsn() const {
  // @@protoc_insertion_point(field_get:alisql.PolarExtra.purgeLsn)
  return purgelsn_;
}
inline void PolarExtra::set_purgelsn(::google::protobuf::uint64 value) {
  set_has_purgelsn();
  purgelsn_ = value;
  // @@protoc_insertion_point(field_set:alisql.PolarExtra.purgeLsn)
}

// -------------------------------------------------------------------

// PaxosMsg

// optional uint64 configId = 1;
inline bool PaxosMsg::has_configid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PaxosMsg::set_has_configid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PaxosMsg::clear_has_configid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PaxosMsg::clear_configid() {
  configid_ = GOOGLE_ULONGLONG(0);
  clear_has_configid();
}
inline ::google::protobuf::uint64 PaxosMsg::configid() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.configId)
  return configid_;
}
inline void PaxosMsg::set_configid(::google::protobuf::uint64 value) {
  set_has_configid();
  configid_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.configId)
}

// required uint64 clusterId = 2;
inline bool PaxosMsg::has_clusterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PaxosMsg::set_has_clusterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PaxosMsg::clear_has_clusterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PaxosMsg::clear_clusterid() {
  clusterid_ = GOOGLE_ULONGLONG(0);
  clear_has_clusterid();
}
inline ::google::protobuf::uint64 PaxosMsg::clusterid() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.clusterId)
  return clusterid_;
}
inline void PaxosMsg::set_clusterid(::google::protobuf::uint64 value) {
  set_has_clusterid();
  clusterid_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.clusterId)
}

// required uint64 serverId = 3;
inline bool PaxosMsg::has_serverid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PaxosMsg::set_has_serverid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PaxosMsg::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PaxosMsg::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
  clear_has_serverid();
}
inline ::google::protobuf::uint64 PaxosMsg::serverid() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.serverId)
  return serverid_;
}
inline void PaxosMsg::set_serverid(::google::protobuf::uint64 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.serverId)
}

// required int32 msgType = 4;
inline bool PaxosMsg::has_msgtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PaxosMsg::set_has_msgtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PaxosMsg::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PaxosMsg::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
inline ::google::protobuf::int32 PaxosMsg::msgtype() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.msgType)
  return msgtype_;
}
inline void PaxosMsg::set_msgtype(::google::protobuf::int32 value) {
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.msgType)
}

// required uint64 term = 5;
inline bool PaxosMsg::has_term() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PaxosMsg::set_has_term() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PaxosMsg::clear_has_term() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PaxosMsg::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::uint64 PaxosMsg::term() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.term)
  return term_;
}
inline void PaxosMsg::set_term(::google::protobuf::uint64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.term)
}

// required uint64 msgId = 6;
inline bool PaxosMsg::has_msgid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PaxosMsg::set_has_msgid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PaxosMsg::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PaxosMsg::clear_msgid() {
  msgid_ = GOOGLE_ULONGLONG(0);
  clear_has_msgid();
}
inline ::google::protobuf::uint64 PaxosMsg::msgid() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.msgId)
  return msgid_;
}
inline void PaxosMsg::set_msgid(::google::protobuf::uint64 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.msgId)
}

// optional uint64 leaderId = 7;
inline bool PaxosMsg::has_leaderid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PaxosMsg::set_has_leaderid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PaxosMsg::clear_has_leaderid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PaxosMsg::clear_leaderid() {
  leaderid_ = GOOGLE_ULONGLONG(0);
  clear_has_leaderid();
}
inline ::google::protobuf::uint64 PaxosMsg::leaderid() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.leaderId)
  return leaderid_;
}
inline void PaxosMsg::set_leaderid(::google::protobuf::uint64 value) {
  set_has_leaderid();
  leaderid_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.leaderId)
}

// optional uint64 prevLogIndex = 8;
inline bool PaxosMsg::has_prevlogindex() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PaxosMsg::set_has_prevlogindex() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PaxosMsg::clear_has_prevlogindex() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PaxosMsg::clear_prevlogindex() {
  prevlogindex_ = GOOGLE_ULONGLONG(0);
  clear_has_prevlogindex();
}
inline ::google::protobuf::uint64 PaxosMsg::prevlogindex() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.prevLogIndex)
  return prevlogindex_;
}
inline void PaxosMsg::set_prevlogindex(::google::protobuf::uint64 value) {
  set_has_prevlogindex();
  prevlogindex_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.prevLogIndex)
}

// optional uint64 prevLogTerm = 9;
inline bool PaxosMsg::has_prevlogterm() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PaxosMsg::set_has_prevlogterm() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PaxosMsg::clear_has_prevlogterm() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PaxosMsg::clear_prevlogterm() {
  prevlogterm_ = GOOGLE_ULONGLONG(0);
  clear_has_prevlogterm();
}
inline ::google::protobuf::uint64 PaxosMsg::prevlogterm() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.prevLogTerm)
  return prevlogterm_;
}
inline void PaxosMsg::set_prevlogterm(::google::protobuf::uint64 value) {
  set_has_prevlogterm();
  prevlogterm_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.prevLogTerm)
}

// repeated .alisql.LogEntry entries = 10;
inline int PaxosMsg::entries_size() const {
  return entries_.size();
}
inline void PaxosMsg::clear_entries() {
  entries_.Clear();
}
inline const ::alisql::LogEntry& PaxosMsg::entries(int index) const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.entries)
  return entries_.Get(index);
}
inline ::alisql::LogEntry* PaxosMsg::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:alisql.PaxosMsg.entries)
  return entries_.Mutable(index);
}
inline ::alisql::LogEntry* PaxosMsg::add_entries() {
  // @@protoc_insertion_point(field_add:alisql.PaxosMsg.entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::alisql::LogEntry >*
PaxosMsg::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:alisql.PaxosMsg.entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::alisql::LogEntry >&
PaxosMsg::entries() const {
  // @@protoc_insertion_point(field_list:alisql.PaxosMsg.entries)
  return entries_;
}

// optional uint64 commitIndex = 11;
inline bool PaxosMsg::has_commitindex() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PaxosMsg::set_has_commitindex() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PaxosMsg::clear_has_commitindex() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PaxosMsg::clear_commitindex() {
  commitindex_ = GOOGLE_ULONGLONG(0);
  clear_has_commitindex();
}
inline ::google::protobuf::uint64 PaxosMsg::commitindex() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.commitIndex)
  return commitindex_;
}
inline void PaxosMsg::set_commitindex(::google::protobuf::uint64 value) {
  set_has_commitindex();
  commitindex_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.commitIndex)
}

// optional bool nocache = 12;
inline bool PaxosMsg::has_nocache() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PaxosMsg::set_has_nocache() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PaxosMsg::clear_has_nocache() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PaxosMsg::clear_nocache() {
  nocache_ = false;
  clear_has_nocache();
}
inline bool PaxosMsg::nocache() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.nocache)
  return nocache_;
}
inline void PaxosMsg::set_nocache(bool value) {
  set_has_nocache();
  nocache_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.nocache)
}

// optional bool isSuccess = 13;
inline bool PaxosMsg::has_issuccess() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PaxosMsg::set_has_issuccess() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PaxosMsg::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PaxosMsg::clear_issuccess() {
  issuccess_ = false;
  clear_has_issuccess();
}
inline bool PaxosMsg::issuccess() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.isSuccess)
  return issuccess_;
}
inline void PaxosMsg::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.isSuccess)
}

// optional uint64 candidateId = 14;
inline bool PaxosMsg::has_candidateid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PaxosMsg::set_has_candidateid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PaxosMsg::clear_has_candidateid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PaxosMsg::clear_candidateid() {
  candidateid_ = GOOGLE_ULONGLONG(0);
  clear_has_candidateid();
}
inline ::google::protobuf::uint64 PaxosMsg::candidateid() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.candidateId)
  return candidateid_;
}
inline void PaxosMsg::set_candidateid(::google::protobuf::uint64 value) {
  set_has_candidateid();
  candidateid_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.candidateId)
}

// optional uint64 lastLogIndex = 15;
inline bool PaxosMsg::has_lastlogindex() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PaxosMsg::set_has_lastlogindex() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PaxosMsg::clear_has_lastlogindex() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PaxosMsg::clear_lastlogindex() {
  lastlogindex_ = GOOGLE_ULONGLONG(0);
  clear_has_lastlogindex();
}
inline ::google::protobuf::uint64 PaxosMsg::lastlogindex() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.lastLogIndex)
  return lastlogindex_;
}
inline void PaxosMsg::set_lastlogindex(::google::protobuf::uint64 value) {
  set_has_lastlogindex();
  lastlogindex_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.lastLogIndex)
}

// optional uint64 lastLogTerm = 16;
inline bool PaxosMsg::has_lastlogterm() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PaxosMsg::set_has_lastlogterm() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PaxosMsg::clear_has_lastlogterm() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PaxosMsg::clear_lastlogterm() {
  lastlogterm_ = GOOGLE_ULONGLONG(0);
  clear_has_lastlogterm();
}
inline ::google::protobuf::uint64 PaxosMsg::lastlogterm() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.lastLogTerm)
  return lastlogterm_;
}
inline void PaxosMsg::set_lastlogterm(::google::protobuf::uint64 value) {
  set_has_lastlogterm();
  lastlogterm_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.lastLogTerm)
}

// optional uint64 force = 17;
inline bool PaxosMsg::has_force() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PaxosMsg::set_has_force() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PaxosMsg::clear_has_force() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PaxosMsg::clear_force() {
  force_ = GOOGLE_ULONGLONG(0);
  clear_has_force();
}
inline ::google::protobuf::uint64 PaxosMsg::force() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.force)
  return force_;
}
inline void PaxosMsg::set_force(::google::protobuf::uint64 value) {
  set_has_force();
  force_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.force)
}

// optional bytes addr = 18;
inline bool PaxosMsg::has_addr() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PaxosMsg::set_has_addr() {
  _has_bits_[0] |= 0x00020000u;
}
inline void PaxosMsg::clear_has_addr() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void PaxosMsg::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_addr();
}
inline const ::std::string& PaxosMsg::addr() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.addr)
  return addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PaxosMsg::set_addr(const ::std::string& value) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.addr)
}
inline void PaxosMsg::set_addr(const char* value) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:alisql.PaxosMsg.addr)
}
inline void PaxosMsg::set_addr(const void* value, size_t size) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:alisql.PaxosMsg.addr)
}
inline ::std::string* PaxosMsg::mutable_addr() {
  set_has_addr();
  // @@protoc_insertion_point(field_mutable:alisql.PaxosMsg.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PaxosMsg::release_addr() {
  // @@protoc_insertion_point(field_release:alisql.PaxosMsg.addr)
  clear_has_addr();
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PaxosMsg::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    set_has_addr();
  } else {
    clear_has_addr();
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:alisql.PaxosMsg.addr)
}

// optional bool voteGranted = 19;
inline bool PaxosMsg::has_votegranted() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void PaxosMsg::set_has_votegranted() {
  _has_bits_[0] |= 0x00040000u;
}
inline void PaxosMsg::clear_has_votegranted() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void PaxosMsg::clear_votegranted() {
  votegranted_ = false;
  clear_has_votegranted();
}
inline bool PaxosMsg::votegranted() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.voteGranted)
  return votegranted_;
}
inline void PaxosMsg::set_votegranted(bool value) {
  set_has_votegranted();
  votegranted_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.voteGranted)
}

// optional bool ignoreCheck = 20;
inline bool PaxosMsg::has_ignorecheck() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void PaxosMsg::set_has_ignorecheck() {
  _has_bits_[0] |= 0x00080000u;
}
inline void PaxosMsg::clear_has_ignorecheck() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void PaxosMsg::clear_ignorecheck() {
  ignorecheck_ = false;
  clear_has_ignorecheck();
}
inline bool PaxosMsg::ignorecheck() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.ignoreCheck)
  return ignorecheck_;
}
inline void PaxosMsg::set_ignorecheck(bool value) {
  set_has_ignorecheck();
  ignorecheck_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.ignoreCheck)
}

// optional uint64 lcType = 21;
inline bool PaxosMsg::has_lctype() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void PaxosMsg::set_has_lctype() {
  _has_bits_[0] |= 0x00100000u;
}
inline void PaxosMsg::clear_has_lctype() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void PaxosMsg::clear_lctype() {
  lctype_ = GOOGLE_ULONGLONG(0);
  clear_has_lctype();
}
inline ::google::protobuf::uint64 PaxosMsg::lctype() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.lcType)
  return lctype_;
}
inline void PaxosMsg::set_lctype(::google::protobuf::uint64 value) {
  set_has_lctype();
  lctype_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.lcType)
}

// optional uint64 minMatchIndex = 22;
inline bool PaxosMsg::has_minmatchindex() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void PaxosMsg::set_has_minmatchindex() {
  _has_bits_[0] |= 0x00200000u;
}
inline void PaxosMsg::clear_has_minmatchindex() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void PaxosMsg::clear_minmatchindex() {
  minmatchindex_ = GOOGLE_ULONGLONG(0);
  clear_has_minmatchindex();
}
inline ::google::protobuf::uint64 PaxosMsg::minmatchindex() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.minMatchIndex)
  return minmatchindex_;
}
inline void PaxosMsg::set_minmatchindex(::google::protobuf::uint64 value) {
  set_has_minmatchindex();
  minmatchindex_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.minMatchIndex)
}

// optional uint64 appliedIndex = 23;
inline bool PaxosMsg::has_appliedindex() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void PaxosMsg::set_has_appliedindex() {
  _has_bits_[0] |= 0x00400000u;
}
inline void PaxosMsg::clear_has_appliedindex() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void PaxosMsg::clear_appliedindex() {
  appliedindex_ = GOOGLE_ULONGLONG(0);
  clear_has_appliedindex();
}
inline ::google::protobuf::uint64 PaxosMsg::appliedindex() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.appliedIndex)
  return appliedindex_;
}
inline void PaxosMsg::set_appliedindex(::google::protobuf::uint64 value) {
  set_has_appliedindex();
  appliedindex_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.appliedIndex)
}

// optional bool appendError = 24;
inline bool PaxosMsg::has_appenderror() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void PaxosMsg::set_has_appenderror() {
  _has_bits_[0] |= 0x00800000u;
}
inline void PaxosMsg::clear_has_appenderror() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void PaxosMsg::clear_appenderror() {
  appenderror_ = false;
  clear_has_appenderror();
}
inline bool PaxosMsg::appenderror() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.appendError)
  return appenderror_;
}
inline void PaxosMsg::set_appenderror(bool value) {
  set_has_appenderror();
  appenderror_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.appendError)
}

// optional uint64 newClusterId = 25;
inline bool PaxosMsg::has_newclusterid() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void PaxosMsg::set_has_newclusterid() {
  _has_bits_[0] |= 0x01000000u;
}
inline void PaxosMsg::clear_has_newclusterid() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void PaxosMsg::clear_newclusterid() {
  newclusterid_ = GOOGLE_ULONGLONG(0);
  clear_has_newclusterid();
}
inline ::google::protobuf::uint64 PaxosMsg::newclusterid() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.newClusterId)
  return newclusterid_;
}
inline void PaxosMsg::set_newclusterid(::google::protobuf::uint64 value) {
  set_has_newclusterid();
  newclusterid_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.newClusterId)
}

// repeated .alisql.ClusterInfoEntry ciEntries = 26;
inline int PaxosMsg::cientries_size() const {
  return cientries_.size();
}
inline void PaxosMsg::clear_cientries() {
  cientries_.Clear();
}
inline const ::alisql::ClusterInfoEntry& PaxosMsg::cientries(int index) const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.ciEntries)
  return cientries_.Get(index);
}
inline ::alisql::ClusterInfoEntry* PaxosMsg::mutable_cientries(int index) {
  // @@protoc_insertion_point(field_mutable:alisql.PaxosMsg.ciEntries)
  return cientries_.Mutable(index);
}
inline ::alisql::ClusterInfoEntry* PaxosMsg::add_cientries() {
  // @@protoc_insertion_point(field_add:alisql.PaxosMsg.ciEntries)
  return cientries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::alisql::ClusterInfoEntry >*
PaxosMsg::mutable_cientries() {
  // @@protoc_insertion_point(field_mutable_list:alisql.PaxosMsg.ciEntries)
  return &cientries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::alisql::ClusterInfoEntry >&
PaxosMsg::cientries() const {
  // @@protoc_insertion_point(field_list:alisql.PaxosMsg.ciEntries)
  return cientries_;
}

// optional uint32 role = 27;
inline bool PaxosMsg::has_role() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void PaxosMsg::set_has_role() {
  _has_bits_[0] |= 0x04000000u;
}
inline void PaxosMsg::clear_has_role() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void PaxosMsg::clear_role() {
  role_ = 0u;
  clear_has_role();
}
inline ::google::protobuf::uint32 PaxosMsg::role() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.role)
  return role_;
}
inline void PaxosMsg::set_role(::google::protobuf::uint32 value) {
  set_has_role();
  role_ = value;
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.role)
}

// optional .alisql.CompressedLogEntries compressedEntries = 28;
inline bool PaxosMsg::has_compressedentries() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void PaxosMsg::set_has_compressedentries() {
  _has_bits_[0] |= 0x08000000u;
}
inline void PaxosMsg::clear_has_compressedentries() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void PaxosMsg::clear_compressedentries() {
  if (compressedentries_ != NULL) compressedentries_->::alisql::CompressedLogEntries::Clear();
  clear_has_compressedentries();
}
inline const ::alisql::CompressedLogEntries& PaxosMsg::compressedentries() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.compressedEntries)
  return compressedentries_ != NULL ? *compressedentries_ : *default_instance_->compressedentries_;
}
inline ::alisql::CompressedLogEntries* PaxosMsg::mutable_compressedentries() {
  set_has_compressedentries();
  if (compressedentries_ == NULL) {
    compressedentries_ = new ::alisql::CompressedLogEntries;
  }
  // @@protoc_insertion_point(field_mutable:alisql.PaxosMsg.compressedEntries)
  return compressedentries_;
}
inline ::alisql::CompressedLogEntries* PaxosMsg::release_compressedentries() {
  // @@protoc_insertion_point(field_release:alisql.PaxosMsg.compressedEntries)
  clear_has_compressedentries();
  ::alisql::CompressedLogEntries* temp = compressedentries_;
  compressedentries_ = NULL;
  return temp;
}
inline void PaxosMsg::set_allocated_compressedentries(::alisql::CompressedLogEntries* compressedentries) {
  delete compressedentries_;
  compressedentries_ = compressedentries;
  if (compressedentries) {
    set_has_compressedentries();
  } else {
    clear_has_compressedentries();
  }
  // @@protoc_insertion_point(field_set_allocated:alisql.PaxosMsg.compressedEntries)
}

// optional bytes extra = 29;
inline bool PaxosMsg::has_extra() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void PaxosMsg::set_has_extra() {
  _has_bits_[0] |= 0x10000000u;
}
inline void PaxosMsg::clear_has_extra() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void PaxosMsg::clear_extra() {
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extra();
}
inline const ::std::string& PaxosMsg::extra() const {
  // @@protoc_insertion_point(field_get:alisql.PaxosMsg.extra)
  return extra_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PaxosMsg::set_extra(const ::std::string& value) {
  set_has_extra();
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:alisql.PaxosMsg.extra)
}
inline void PaxosMsg::set_extra(const char* value) {
  set_has_extra();
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:alisql.PaxosMsg.extra)
}
inline void PaxosMsg::set_extra(const void* value, size_t size) {
  set_has_extra();
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:alisql.PaxosMsg.extra)
}
inline ::std::string* PaxosMsg::mutable_extra() {
  set_has_extra();
  // @@protoc_insertion_point(field_mutable:alisql.PaxosMsg.extra)
  return extra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PaxosMsg::release_extra() {
  // @@protoc_insertion_point(field_release:alisql.PaxosMsg.extra)
  clear_has_extra();
  return extra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PaxosMsg::set_allocated_extra(::std::string* extra) {
  if (extra != NULL) {
    set_has_extra();
  } else {
    clear_has_extra();
  }
  extra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra);
  // @@protoc_insertion_point(field_set_allocated:alisql.PaxosMsg.extra)
}

// -------------------------------------------------------------------

// TestMsg1

// required uint64 id = 1;
inline bool TestMsg1::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TestMsg1::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TestMsg1::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TestMsg1::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 TestMsg1::id() const {
  // @@protoc_insertion_point(field_get:alisql.TestMsg1.id)
  return id_;
}
inline void TestMsg1::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:alisql.TestMsg1.id)
}

// optional uint64 c1 = 2;
inline bool TestMsg1::has_c1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TestMsg1::set_has_c1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TestMsg1::clear_has_c1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TestMsg1::clear_c1() {
  c1_ = GOOGLE_ULONGLONG(0);
  clear_has_c1();
}
inline ::google::protobuf::uint64 TestMsg1::c1() const {
  // @@protoc_insertion_point(field_get:alisql.TestMsg1.c1)
  return c1_;
}
inline void TestMsg1::set_c1(::google::protobuf::uint64 value) {
  set_has_c1();
  c1_ = value;
  // @@protoc_insertion_point(field_set:alisql.TestMsg1.c1)
}

// -------------------------------------------------------------------

// TestMsg2

// required uint64 id = 1;
inline bool TestMsg2::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TestMsg2::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TestMsg2::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TestMsg2::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 TestMsg2::id() const {
  // @@protoc_insertion_point(field_get:alisql.TestMsg2.id)
  return id_;
}
inline void TestMsg2::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:alisql.TestMsg2.id)
}

// optional uint64 c1 = 2;
inline bool TestMsg2::has_c1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TestMsg2::set_has_c1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TestMsg2::clear_has_c1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TestMsg2::clear_c1() {
  c1_ = GOOGLE_ULONGLONG(0);
  clear_has_c1();
}
inline ::google::protobuf::uint64 TestMsg2::c1() const {
  // @@protoc_insertion_point(field_get:alisql.TestMsg2.c1)
  return c1_;
}
inline void TestMsg2::set_c1(::google::protobuf::uint64 value) {
  set_has_c1();
  c1_ = value;
  // @@protoc_insertion_point(field_set:alisql.TestMsg2.c1)
}

// repeated uint64 c2 = 3;
inline int TestMsg2::c2_size() const {
  return c2_.size();
}
inline void TestMsg2::clear_c2() {
  c2_.Clear();
}
inline ::google::protobuf::uint64 TestMsg2::c2(int index) const {
  // @@protoc_insertion_point(field_get:alisql.TestMsg2.c2)
  return c2_.Get(index);
}
inline void TestMsg2::set_c2(int index, ::google::protobuf::uint64 value) {
  c2_.Set(index, value);
  // @@protoc_insertion_point(field_set:alisql.TestMsg2.c2)
}
inline void TestMsg2::add_c2(::google::protobuf::uint64 value) {
  c2_.Add(value);
  // @@protoc_insertion_point(field_add:alisql.TestMsg2.c2)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TestMsg2::c2() const {
  // @@protoc_insertion_point(field_list:alisql.TestMsg2.c2)
  return c2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TestMsg2::mutable_c2() {
  // @@protoc_insertion_point(field_mutable_list:alisql.TestMsg2.c2)
  return &c2_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace alisql

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_paxos_2eproto__INCLUDED
